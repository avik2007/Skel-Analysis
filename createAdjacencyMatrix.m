%% ---------------------- createAdjacencyMatrix ------------------------------
% Avik Mondal
% 
% Aim:
% - this function takes a pair of structs (nodes and links as generated by Skel2Graph3D)
% and generates an adjacency matrix. It also takes a feature to weight each
% value
%
% Parameters:
% struct node - nodes generated using convert_split_to_skel.m
% struct link - links generated using convert_split_to_skel.m
% char feature - pick a feature to weight the adjacency matrix. Options: 
% 'stress' (if the link has been loaded), 'thickness', 'length',
% 'none' for just 1's and 0's. 
%--------------------------------------------------------------------------
function A = createAdjacencyMatrix(node,link,feature)

A = zeros(length(node));
for index = 1:length(link)
    if strcmp(feature,'stress')
        dataList = [link.finalStress];
        val = link(index).finalStress;%/max(dataList);
    elseif strcmp(feature,'thickness')
        dataList = [link.avgthickness];
        val = link(index).avgthickness;%/max(dataList);
    else
        val = 1;
    end
    A(link(index).n1, link(index).n2) = val; 
    A(link(index).n2, link(index).n1) = val; 
end

A = sparse(A); 
%{
imagesc(A);

if (val == 1)
    title('Binary Adjacency Matrix');
elseif (strcmp(feature,'stress'))
    colorbar;
    title('Adjacency Matrix Weighted By Stress');
elseif (strcmp(feature,'thickness'))
    colorbar;
    title('Adjacency Matrix Weighted by Thickness'); 
end
%}